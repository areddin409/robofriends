{"version":3,"sources":["reducers.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","index.js"],"names":["intialStateSearch","searchField","intialStateRobots","isPending","robots","error","Card","name","email","id","className","alt","src","CardList","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","this","setState","Component","App","onRequestRobots","onSearchChange","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8384a18d.chunk.js","sourcesContent":["import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_FAILED,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_PENDING\n} from './constants';\n\nconst intialStateSearch = {\n  searchField: ''\n};\n\nexport const searchRobots = (state = intialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst intialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n};\n\nexport const requestRobots = (state = intialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n    default:\n      return state;\n  }\n};\n","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"tc bg-dark-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = props => {\n  return (\n    <div\n      style={{\n        overflowY: 'scroll',\n        border: '3px solid black',\n        height: '671px'\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  //similar to try catch\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops! That is not good</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBountry from '../components/ErrorBoundry';\nimport './App.css';\n\nimport { setSearchField, requestRobots } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return isPending ? (\n      <h1 className=\"tc f-headline\">Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f-headline \">RoboFriends</h1>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <ErrorBountry>\n            <CardList robots={filteredRobots} />\n          </ErrorBountry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_FAILED,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_PENDING\n} from './constants';\n\nexport const setSearchField = text => {\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  };\n};\n\nexport const requestRobots = () => dispatch => {\n  dispatch({\n    type: REQUEST_ROBOTS_PENDING\n  });\n  fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n    return response\n      .json()\n      .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n      .catch(error =>\n        dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\n      );\n  });\n};\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { searchRobots, requestRobots } from './reducers';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleWare from 'redux-thunk';\nimport App from './containers/App';\nimport './index.css';\nimport 'tachyons';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleWare, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}